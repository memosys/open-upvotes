generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Board {
  id        String   @id @default(uuid())
  title     String
  path      String   @unique @default("/")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  ideas     Idea[]

  admin    User   @relation("admin", fields: [admin_id], references: [id])
  admin_id String

  moderators BoardModerator[]
  viewers    BoardViewer[]
}

model Idea {
  id          String     @id @default(uuid())
  title       String
  description String
  board       Board      @relation(fields: [board_id], references: [id])
  board_id    String
  user        User       @relation(fields: [user_id], references: [id])
  user_id     String
  status      IdeaStatus @default(SUGGESTED)
  labels      Label[]
  upvotes     Upvote[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  comments    Comment[]
}

model Label {
  id        String   @id @default(uuid())
  label     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String

  ideas Idea[]
}

model Upvote {
  idea      Idea     @relation(fields: [idea_id], references: [id])
  idea_id   String
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@id([idea_id, user_id])
}

model Comment {
  id        String   @id @default(uuid())
  time      DateTime
  comment   String
  idea      Idea     @relation(fields: [idea_id], references: [id])
  idea_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String
}

model BoardModerator {
  board_id String
  user_id  String
  board    Board  @relation(fields: [board_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])

  @@id([board_id, user_id])
}

model BoardViewer {
  board_id String
  user_id  String
  board    Board  @relation(fields: [board_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])

  @@id([board_id, user_id])
}

model User {
  id       String  @id @default(uuid())
  username String
  provider String?
  address  String?
  imageSrc String?

  ideas     Idea[]
  labels    Label[]
  upvotes   Upvote[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())

  adminBoards Board[] @relation("admin")

  moderatorBoards BoardModerator[]

  viewerBoards BoardViewer[]
}

enum IdeaStatus {
  SUGGESTED
  TODO
  IN_PROGRESS
  DONE
  ARCHIVED
}
